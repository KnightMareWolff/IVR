# Nome do arquivo de sa√≠da onde todo o c√≥digo ser√° consolidado.
$outputFile = "all_code.txt"

# Extens√µes dos arquivos de c√≥digo a serem inclu√≠dos.
$extensions = @(".h", ".cpp")

Write-Host "‚úÖ Iniciando a consolida√ß√£o de arquivos .h e .cpp para Willi√§m Wolff..." -ForegroundColor Green
Write-Host "O arquivo de sa√≠da ser√°: '$outputFile'." -ForegroundColor DarkYellow
Write-Host "Verificando e removendo qualquer vers√£o anterior de '$outputFile' para garantir um in√≠cio limpo." -ForegroundColor DarkYellow

# --- Tratamento de Erros e Inicializa√ß√£o ---
try {
    # Remove o arquivo de sa√≠da existente para garantir um in√≠cio limpo.
    # O parametro -ErrorAction SilentlyContinue evita que o script pare se o arquivo n√£o existir.
    # O parametro -Force permite remover arquivos somente leitura, se houver.
    Remove-Item $outputFile -ErrorAction SilentlyContinue -Force

    # Cria o arquivo de sa√≠da vazio com a codifica√ß√£o UTF-8 para garantir que todas as escritas posteriores mantenham esta codifica√ß√£o.
    "" | Set-Content -Path $outputFile -Encoding UTF8 -ErrorAction Stop
    Write-Host "Arquivo '$outputFile' criado (ou redefinido) com codifica√ß√£o UTF-8." -ForegroundColor Green

    Write-Host "Buscando arquivos com as extens√µes $($extensions -join ', ') no diret√≥rio atual e subpastas..." -ForegroundColor Cyan

    # --- Localiza√ß√£o e Sele√ß√£o de Arquivos ---
    # Get-ChildItem -Recurse: Varre o diret√≥rio atual e todas as subpastas.
    # -File: Garante que apenas arquivos (e n√£o diret√≥rios) sejam retornados.
    # Where-Object: Filtra os arquivos para incluir apenas aqueles com as extens√µes desejadas.
    $files = Get-ChildItem -Path . -Recurse -File -ErrorAction SilentlyContinue | Where-Object { $extensions -contains $_.Extension }

    if (-not $files) {
        Write-Warning "Nenhum arquivo com as extens√µes $($extensions -join ', ') encontrado no diret√≥rio atual ou subpastas. O script ser√° encerrado."
        exit
    }

    $fileCount = $files.Count
    $processedCount = 0

    Write-Host "Total de arquivos encontrados: $fileCount." -ForegroundColor Green

    # --- Consolida√ß√£o de Conte√∫do ---
    foreach ($file in $files) {
        $processedCount++
        $relativeFilePath = Resolve-Path -Path $file.FullName -Relative # Caminho relativo para o output mais limpo
        Write-Host "Processando arquivo ($processedCount/$fileCount): $relativeFilePath" -ForegroundColor Cyan

        try {
            # --- Formato do Arquivo de Sa√≠da ---
            $header = "--- IN√çCIO DO ARQUIVO: $($file.FullName) ---"
            $footer = "--- FIM DO ARQUIVO: $($file.FullName) ---"
            $separator = "`n`n" # Duas linhas vazias para uma separa√ß√£o clara entre os arquivos

            # L√™ o conte√∫do do arquivo. -Raw l√™ o arquivo inteiro como uma √∫nica string.
            # -Encoding UTF8 √© importante para ler corretamente arquivos que podem conter caracteres especiais.
            $content = Get-Content -Path $file.FullName -Raw -Encoding UTF8 -ErrorAction Stop

            # Adiciona o cabe√ßalho, conte√∫do, rodap√© e separador ao arquivo de sa√≠da.
            # Add-Content -Encoding UTF8 garante que a codifica√ß√£o seja mantida.
            Add-Content -Path $outputFile -Value $header -Encoding UTF8
            Add-Content -Path $outputFile -Value $content -Encoding UTF8
            Add-Content -Path $outputFile -Value $footer -Encoding UTF8
            Add-Content -Path $outputFile -Value $separator -Encoding UTF8

        }
        catch [System.IO.IOException] {
            # Trata erros de E/S, como arquivo sendo usado por outro processo ou problemas de permiss√£o para ler.
            Write-Warning "   Erro de E/S ao processar '$($file.FullName)': $($_.Exception.Message)"
        }
        catch [System.UnauthorizedAccessException] {
            # Trata especificamente erros de permiss√£o para ler o arquivo.
            Write-Warning "‚ö†Ô∏è Erro de permiss√£o ao acessar '$($file.FullName)': $($_.Exception.Message)"
        }
        catch {
            # Captura quaisquer outros erros inesperados durante o processamento de um arquivo individual.
            Write-Warning "üö´ Erro inesperado ao processar '$($file.FullName)': $($_.Exception.Message)"
        }
    }

    Write-Host "‚úÖ Consolida√ß√£o conclu√≠da! O conte√∫do combinado est√° em '$outputFile'." -ForegroundColor Green
    Write-Host "Este arquivo est√° pronto para ser usado para an√°lise por um modelo de IA." -ForegroundColor Green

}
catch [System.UnauthorizedAccessException] {
    # Trata erros de permiss√£o para criar ou modificar o arquivo de sa√≠da.
    Write-Error "‚ùå Erro fatal de permiss√£o: Voc√™ n√£o tem as permiss√µes necess√°rias para criar ou gravar no arquivo '$outputFile'. Verifique as permiss√µes do diret√≥rio e tente novamente. $($_.Exception.Message)"
}
catch [System.Exception] {
    # Captura quaisquer outros erros fatais que possam ocorrer durante a execu√ß√£o geral do script.
    Write-Error "‚ùå Ocorreu um erro inesperado e fatal durante a execu√ß√£o do script: $($_.Exception.Message)"
}